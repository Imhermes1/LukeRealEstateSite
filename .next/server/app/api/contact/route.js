"use strict";(()=>{var e={};e.id=386,e.ids=[386],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6698:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>N,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>d});var n={};o.r(n),o.d(n,{POST:()=>u});var s=o(9303),r=o(8716),a=o(670),i=o(7070);async function l(e){let t=process.env.NOTION_TOKEN,o=process.env.NOTION_DATABASE_ID;if(!t||!o)return console.warn("Notion credentials not configured - NOTION_TOKEN or NOTION_DATABASE_ID missing"),null;console.log("Attempting to add to Notion database:",{databaseId:o=o.split("?")[0].split("&")[0],tokenExists:!!t});try{let n={parent:{database_id:o},properties:{Name:{title:[{text:{content:e.name}}]},Email:{email:e.email},Phone:{phone_number:e.phone||null},"Contact Method":{select:{name:e.contactMethod||"email"}},Message:{rich_text:[{text:{content:e.message}}]},Status:{select:{name:"New"}},Submitted:{date:{start:new Date().toISOString()}}}};console.log("Notion API request body:",JSON.stringify(n,null,2));let s=await fetch("https://api.notion.com/v1/pages",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json","Notion-Version":"2022-06-28"},body:JSON.stringify(n)});if(console.log("Notion API response status:",s.status),console.log("Notion API response headers:",Object.fromEntries(s.headers.entries())),!s.ok){let e=await s.text();return console.error("Notion API error response:",e),console.error("Notion API error status:",s.status),null}let r=await s.json();return console.log("Notion API success response:",r),r}catch(e){return console.error("Error adding to Notion:",e),null}}async function c(e){let t=process.env.RESEND_API_KEY;if(!t)return console.warn("Resend API key not configured - RESEND_API_KEY missing"),null;try{let o=await fetch("https://api.resend.com/emails",{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({from:"website@lukefornieri.com.au",to:["luke.f@makrealty.com.au"],subject:`New Lead: ${e.name} - Luke Fornieri Website`,html:`
          <h2>New Contact Form Submission</h2>
          <p><strong>Name:</strong> ${e.name}</p>
          <p><strong>Email:</strong> ${e.email}</p>
          <p><strong>Phone:</strong> ${e.phone||"Not provided"}</p>
          <p><strong>Preferred Contact:</strong> ${e.contactMethod}</p>
          <p><strong>Message:</strong></p>
          <p>${e.message.replace(/\n/g,"<br>")}</p>
          <hr>
          <p><small>Submitted: ${new Date().toLocaleString("en-AU",{timeZone:"Australia/Melbourne"})}</small></p>
        `})});if(!o.ok){let e=await o.text();return console.error("Resend API error:",o.status,e),null}return await o.json()}catch(e){return console.error("Error sending email:",e),null}}async function u(e){try{let t=await e.json();if(console.log("Environment variables status:",{hasNotionToken:!!process.env.NOTION_TOKEN,hasNotionDatabaseId:!!process.env.NOTION_DATABASE_ID,hasResendApiKey:!!process.env.RESEND_API_KEY}),!t.name||!t.email||!t.message)return i.NextResponse.json({error:"Missing required fields"},{status:400});if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t.email))return i.NextResponse.json({error:"Invalid email format"},{status:400});let o=await l(t),n=await c(t);if(console.log("Contact form submission processed:",{name:t.name,email:t.email,notionSuccess:!!o,emailSuccess:!!n,timestamp:new Date().toISOString()}),!(process.env.NOTION_TOKEN||process.env.RESEND_API_KEY))return console.warn("No integrations configured - form will only show success message"),i.NextResponse.json({success:!0,message:"Thank you! Your message has been received. (Note: Integrations not configured)",integrations:{notion:!1,email:!1}});return i.NextResponse.json({success:!0,message:"Thank you! Your message has been received.",integrations:{notion:!!o,email:!!n}})}catch(e){return console.error("Contact form submission error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/contact/route",pathname:"/api/contact",filename:"route",bundlePath:"app/api/contact/route"},resolvedPagePath:"/Users/lukefornieri/LukeRealEstateSite/app/api/contact/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:d,serverHooks:g}=p,N="/api/contact/route";function h(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:d})}}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),n=t.X(0,[276,972],()=>o(6698));module.exports=n})();